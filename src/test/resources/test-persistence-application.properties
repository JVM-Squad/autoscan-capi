spring.main.allow-bean-definition-overriding=true
camel.springboot.name=CAPI Load Balancer
server.port=8380
spring.banner.location=classpath:capi.txt

capi.version=@project.version@
capi.name=@project.name@

build.version=@project.version@

#server.ssl.key-store-type=PKCS12
#server.ssl.key-store=/Users/rodrigo/ext/gsc/capi-lb.p12
#server.ssl.key-store-password=capi-lb
#server.ssl.key-alias=capi-lb
#server.ssl.enabled=true

logging.level.root=INFO
logging.level.io.surisoft.capi.lb=TRACE
#logging.level.org.apache.camel.zipkin=TRACE
#logging.level.zipkin2.reporter=TRACE

management.endpoints.web.base-path=/analytics/
management.endpoints.web.exposure.include=*
management.security.enabled=false
management.endpoint.camelroutes.enabled=true

camel.component.metrics.enabled=true
camel.servlet.mapping.context-path=/capi/*

## MySQL Properties
spring.datasource.url=jdbc:h2:mem:db;DB_CLOSE_DELAY=-1;MODE=MYSQL
spring.datasource.username=root
spring.datasource.password=root

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.properties.driver.name=org.h2.Driver
spring.jpa.hibernate.use-new-id-generator-mappings=false
#drop n create table, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=create

capi.cache.enabled=false
hawtio.authenticationEnabled=false

##Time to live for Sticky Sessions feature
sticky.session.time.to.live=2

## All calls in error will be bridged to this endpoint
capi.gateway.error.endpoint=localhost:8380/capi-error

## CAPI Manager endpoints can be secured by enabling this feature, if you enable, you need to provide the JWK endpoint of your OIDC provider.
## If the OIDC Provider listens on HTTPS, it needs to be trusted by CAPI
capi.manager.security.enabled=false
capi.manager.security.issuer=http://localhost:8080/auth/realms/master/protocol/openid-connect/certs

## If you want to enable certificate management, please provide a trust store (JKS).
capi.trust.store.enabled=false
capi.trust.store.path=classpath:cacerts
capi.trust.store.password=changeit

## If you want CAPI to search consul for available APIs to be deployed, enable this feature.
capi.consul.discovery.enabled=false
capi.consul.discovery.timer.interval=20
capi.consul.host=http://localhost:8500

##Enable Zipkin
capi.zipkin.enabled=false
capi.zipkin.endpoint=http://localhost:9411/api/v2/spans

## We dont want Spring Security to generate any default password
## We want persistence to be optional, so we disable autoconfiguration for JPA
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, \
  org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, \
  org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, \
  org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration

#This is important to disable the default petstore
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.enabled=true

#Enable / Disable Persistence
capi.persistence.enabled=true

spring.profiles.active=default

capi.disable.redirect=true
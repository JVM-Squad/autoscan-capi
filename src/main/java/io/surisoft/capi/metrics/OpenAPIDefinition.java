package io.surisoft.capi.metrics;

import com.fasterxml.jackson.databind.ObjectMapper;
import io.surisoft.capi.schema.Service;
import org.apache.camel.util.json.JsonArray;
import org.apache.camel.util.json.JsonObject;
import org.cache2k.Cache;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.actuate.endpoint.annotation.Endpoint;
import org.springframework.boot.actuate.endpoint.annotation.ReadOperation;
import org.springframework.boot.actuate.endpoint.annotation.Selector;
import org.springframework.stereotype.Component;

import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;

@Component
@Endpoint(id = "openapi")
public class OpenAPIDefinition {

    private final Cache<String, Service> serviceCache;

    @Value("${capi.public-endpoint}")
    private String capiPublicEndpoint;

    public OpenAPIDefinition(Cache<String, Service> serviceCache) {
        this.serviceCache = serviceCache;
    }

    @ReadOperation
    public JsonObject getCacheOpenApiDefinition(@Selector String serviceName) {
        if(serviceCache.containsKey(serviceName)) {
            ObjectMapper objectMapper = new ObjectMapper();
            try {
                Service service = serviceCache.get(serviceName);
                if(service != null && service.getServiceMeta() != null && service.getServiceMeta().getOpenApiEndpoint() != null) {
                    HttpClient client = HttpClient.newBuilder().build();
                    HttpRequest request = HttpRequest.newBuilder().uri(URI.create(service.getServiceMeta().getOpenApiEndpoint())).build();
                    HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());
                    JsonObject serverObject = new JsonObject();
                    serverObject.put("url", capiPublicEndpoint + serviceName.replaceAll(":", "/"));
                    JsonObject responseObject = objectMapper.readValue(response.body(), JsonObject.class);
                    responseObject.remove("servers");

                    JsonArray serversArray = new JsonArray();
                    serversArray.add(serverObject);

                    JsonObject infoObject = new JsonObject();
                    infoObject.put("title", service.getId());
                    infoObject.put("description", "Open API definition generated by CAPI");
                    responseObject.put("info", infoObject);
                    responseObject.put("servers", serversArray);
                    return responseObject;
                }
                return null;
            } catch (NullPointerException | IOException | InterruptedException e) {
                return null;
            }
        }
        return null;
    }
}